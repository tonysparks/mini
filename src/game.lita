import "io";
import "raylib";
import "common";
import "input_system";
import "console";


public struct Game {
    camera: Camera


    model: Model
    anims: ModelAnimation*
    numOfAnimations: i32
    animationFrame: i32
    texture: Texture2D
    position: Vec3
}

const game = Game{}

func GameOnMouseEvent(event: MouseEvent*) : bool {    
    return false
}

func GameOnKeyEvent(event: KeyEvent*) : bool {    
    return false
}

public func GameInit() {
    game.camera = Camera {
        .position = Vec3{ 10.0f, 10.0f, 10.0f }, // Camera position
        .target = Vec3{ 0.0f, 0.0f, 0.0f },      // Camera looking at point
        .up = Vec3{ 0.0f, 1.0f, 0.0f },          // Camera up vector (rotation towards target)
        .fovy = 45.0f,                           // Camera field-of-view Y
        .type = CameraType.CAMERA_PERSPECTIVE,              // Camera mode type
    }

    SetCameraMode(game.camera, CameraMode.CAMERA_FIRST_PERSON); // Set free camera mode
    //SetCameraMode(game.camera, CameraMode.CAMERA_FREE); // Set free camera mode

    InputSysRegisterMouseHandler(&GameOnMouseEvent)
    InputSysRegisterKeyboardHandler(&GameOnKeyEvent)


    game.model = LoadModel("../assets/models/output.iqm");               // Load the animated model mesh and basic data    
    game.texture = LoadTexture("../assets/models/us_infantry.png");    // Load model texture and set material
    SetMaterialTexture(&game.model.materials[0], 
                      MaterialMapType.MAP_ALBEDO, 
                      game.texture);  // Set model material map texture



    game.position = Vec3{ 0.0f, 0.0f, 0.0f };            // Set model position

    // Load animation data    
    game.anims = LoadModelAnimations("../assets/models/idle.iqm", &game.numOfAnimations);
    game.animationFrame = 0;    
}

public func GameDestroy() {
}



public func GameUpdate(timeStep: TimeStep*) {
    UpdateCamera(&game.camera)

    game.animationFrame += 1
    //UpdateModelAnimation(game.model, game.anims[0], game.animationFrame);
    if (game.animationFrame >= game.anims[0].frameCount) {
        game.animationFrame = 0;
    }
}

public func GameDraw() {
    BeginMode3D(game.camera)
    defer EndMode3D()
    
    DrawGrid(10, 1.0f);
    DrawModelEx(game.model, game.position, Vec3{ 1.0f, 0.0f, 0.0f }, -90.0f, Vec3{ 1.0f, 1.0f, 1.0f }, WHITE);
}